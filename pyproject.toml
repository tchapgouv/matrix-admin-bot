[project]
name = "matrix_admin_bot"
description = "Admin bot"
authors = [{ name = "Tchap Team", email = "tech@tchap.beta.gouv.fr" }]
requires-python = ">=3.11"
license = "MIT"
dependencies = [
    "tchap-bot",
    "pydantic>=2.10.6,<3",
    "pydantic-settings>=2.8.1,<3",
    "pyotp>=2.9.0,<3",
    "structlog>=24.2.0,<25",
    "matrix-nio",
]
dynamic = ["version"]

[project.scripts]
matrix-admin-bot = "matrix_admin_bot.adminbot:main"
tchap-admin-bot = "tchap_admin_bot.tchapadminbot:main"

[dependency-groups]
dev = [
    "ruff>=0.11.2,<0.12",
    "basedpyright>=1.28.3,<2",
    "pytest>=8.3.5,<9",
    "pytest-asyncio>=0.25.3,<0.26",
    "pytest-cov>=6.0.0,<7",
]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.sdist]
include = [
    "matrix_admin_bot",
    "matrix_command_bot",
    "tchap_admin_bot",
]

[tool.hatch.build.targets.wheel]
include = [
    "matrix_admin_bot",
    "matrix_command_bot",
    "tchap_admin_bot",
]

[tool.uv]

[tool.uv.sources]
tchap-bot = { git = "https://code.peren.fr/MatMaul/tchapbot.git", rev = "617568c9fdf470a23697aec9b4287a9b22014762" }
matrix-nio = { git = "https://github.com/matrix-nio/matrix-nio.git", rev = "37be73e987de7edbe5ec9fd2bcffc31565be0598" }

[tool.pyright]
pythonVersion = "3.11"

typeCheckingMode = "strict"

reportAny = false
reportUnknownMemberType = false
reportMissingTypeStubs = false
reportUnusedCallResult = false
reportUnusedParameter = false

executionEnvironments = [
  { root = "tests", reportAttributeAccessIssue = false },
]

# TODO add more typing
reportUnannotatedClassAttribute = false

[tool.ruff.lint]
select = [
"ALL"
]
ignore = [
    "TD",       # TODO formatting
    "ISC001",   # This rule conflicts with ruff formatter
    "COM812",   # Trailing comma missing
    "PLR2004",  # Magic value used in comparison
    "PLR0913",  # Too many arguments in function definition
    "TC001",   # Move application import into a type-checking block
    "ASYNC110", # Use `anyio.Event` instead of awaiting `anyio.sleep` in a `while` loop

    # TO BE FIXED !!
    "TRY002",   # Create your own exception
    "FIX002",   # Line contains TODO, consider resolving the issue
    "D",        # Missing docstring
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "INP001",  # File is part of an implicit namespace package. Add an `__init__.py`
    "PLW0603", # Using the global statement to update variable is discouraged
    "S101",    # Use of `assert` detected
    "S105",    # Possible hardcoded password assigned
    "DTZ005",  # `datetime.datetime.now()` called without a `tz` argument
]

[tool.coverage.run]
source = [
    "matrix_admin_bot",
    "matrix_command_bot",
    "tchap_admin_bot"
]
