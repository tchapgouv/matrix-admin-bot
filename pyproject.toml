[project]
name = "matrix_admin_bot"
requires-python = ">=3.11"

[tool.poetry]
name = "matrix_admin_bot"
version = "0.0.0"
description = "Admin bot"
authors = ["Tchap Team <tech@tchap.beta.gouv.fr>"]
license = "MIT"
packages = [
    { include = "matrix_admin_bot" },
    { include = "matrix_command_bot" },
]

[tool.poetry.scripts]
matrix-admin-bot = "matrix_admin_bot.adminbot:main"

[tool.poetry.dependencies]
python = "^3.11"
#tchap-bot = { path = "../tchapbot/", develop = true }
tchap-bot = { git = "https://code.peren.fr/MatMaul/tchapbot.git", branch = "tchapadmin" }
#tchap-bot = { git = "https://code.peren.fr/open-source/tchapbot.git", branch = "main" }
pydantic = "^2.6.3"
pydantic-settings = "^2.2.1"
pyotp = "^2.9.0"
structlog = "^24.2.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.7.4"
basedpyright = "^1.21.1"
pytest = "^8.2.2"
pytest-asyncio = "^0.24.0"
coverage = "^7.5.4"

[tool.poetry-dynamic-versioning]
enable = true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.pyright]
pythonVersion = "3.11"

typeCheckingMode = "all"

reportAny = false
reportUnknownMemberType = false
reportMissingTypeStubs = false
reportUnusedCallResult = false
reportUnusedParameter = false

executionEnvironments = [
  { root = "tests", reportAttributeAccessIssue = false },
]

# TODO add more typing
reportUnannotatedClassAttribute = false

[tool.ruff.lint]
select = [
"ALL"
]
ignore = [
    "TD",       # TODO formatting
    "ISC001",   # This rule conflicts with ruff formatter
    "ANN101",   # Missing type annotation for `self` in method
    "ANN102",   # Missing type annotation for `cls` in classmethod
    "COM812",   # Trailing comma missing
    "PLR2004",  # Magic value used in comparison
    "PLR0913",  # Too many arguments in function definition
    "TCH001",   # Move application import into a type-checking block
    "ASYNC110", # Use `anyio.Event` instead of awaiting `anyio.sleep` in a `while` loop

    # TO BE FIXED !!
    "TRY002",   # Create your own exception
    "FIX002",   # Line contains TODO, consider resolving the issue
    "D",        # Missing docstring
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "INP001",  # File is part of an implicit namespace package. Add an `__init__.py`
    "PLW0603", # Using the global statement to update variable is discouraged
    "S101",    # Use of `assert` detected
    "S105",    # Possible hardcoded password assigned
]
