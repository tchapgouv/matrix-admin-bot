name: Tests

on:
  push:
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  define-matrix:
    runs-on: ubuntu-latest

    outputs:
      python-versions: ${{ steps.python-versions.outputs.python-versions }}

    steps:
      - name: Define supported Python versions
        id: python-versions
        run: |
          echo 'python-versions=["3.11", "3.12", "3.13"]' >> "$GITHUB_OUTPUT"

  tests:
    runs-on: ubuntu-latest
    name: Testing
    needs: define-matrix
    strategy:
      matrix:
        python-version: ${{ fromJSON(needs.define-matrix.outputs.python-versions) }}
    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Run tests
        run: uv run --frozen pytest --cov

  lint:
    runs-on: ubuntu-latest
    name: Formatting and linting
    needs: define-matrix
    strategy:
      matrix:
        python-version: ${{ fromJSON(needs.define-matrix.outputs.python-versions) }}
    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Code style (ruff)
        run: uv run --frozen ruff format --diff

      - name: Semantic checks (ruff)
        run: uv run --frozen ruff check

  types:
    runs-on: ubuntu-latest
    name: Typechecking
    needs: define-matrix
    strategy:
      matrix:
        python-version: ${{ fromJSON(needs.define-matrix.outputs.python-versions) }}
    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Type checks
        run: uv run --frozen basedpyright
